From c0d4e3751ab021ee43fdc9a5bb7fd6aa4cc19d9a Mon Sep 17 00:00:00 2001
From: Charlie <christc@tcd.ie>
Date: Sat, 10 Oct 2020 18:00:13 +0000
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-38.pyc | Bin 0 -> 1093 bytes
 client3.py                         |  47 +++++++++++++++++------------
 client_test.py                     |   6 ++--
 3 files changed, 31 insertions(+), 22 deletions(-)
 create mode 100644 __pycache__/client3.cpython-38.pyc

diff --git a/__pycache__/client3.cpython-38.pyc b/__pycache__/client3.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..55ef4d6597bda4381bc7ee503512c536180ccb38
GIT binary patch
literal 1093
zcmYjQ&2Aev5GHrItCcLfZem+8a$$l7jnE=W(Tid9CqNVQQW#ExASjVwu@*=6+Ph1c
zqzYJ-4~6<5^0C((@(g{00=)K=V}YD<Nr#kegaqf0v%`<ya9^yhb_kAt{`({UyG_Wy
z-uZN3j6A|+-lC91(uxQgbR?pnV-W|<1e1|SWGqt2Wb!8wEt$#|>I~X4JBjog=)el3
zb2_Jw$!jUP5HD7N9<MDvgJiJ|Y{4$b1-+n)&%G8m;0EU17dN2=H|O*f6B}YvY>6J+
zl5N<4P1u6oh;5NMrR3CNv;!IRpf`^$W4}oHob*@TA$GDiy>n#kcy}<U)Uc?Il(D-z
z4|g68PA8zxek|qpzn_=yDIr5#*CRoT;ra=ed4yty9Bh+wYP}V06B%#g`R7sa*|i_f
zqFLM{GPzC8*^GK`#zqX$q|;r#ua%q(ffrT9)ri|8;0=HT$$u-V2^ek_KZFK!VKIrz
z!WLsyHkP}@ST#IxEvv@)K`C7_*5weEeqm1DMF_D^T{5avVf%?oPAAHO_F>n?5AtPx
z8*`VY_P6_s=oM5Sb_PePhJl_mc=q5)1vNCb&}T181N%x_GdLdCd5z#J$iEp3s}lFW
zeK0<A-9xaC5$3*!c?WBm@UG&FuH)=dy^67+hjBH$?N?xS1C1G#6kkbKM$eJk8NE%A
zt$2Eu{|uHR6Q%N81^juzi$-4B2VDD(?S(7!Bhk7{xiSvI#!_@K(PfDBnXmU1dL~6d
zSVmc-*TQa|*G1Xn`Si=Do;%6!8D3a^AKBZzXTIi0UC`kewEEL5RKvXfwpg3!swxj2
zXux-6tVox>W45e8uw$bdk!nP*YLPsB@#NXBj_w6^u8(hu8uHw+5*z0d%sm80bC+OC
zr4g;G$}Oy{#?ZKQq;y?a$21hurJ>_SXLy;=ckTaS?b{K09iB{MKOx1pUN4#XZrR%(
hHZf$rK#|cfV}>*9WGh*`P8q%R5k2fHqn(dg{6CD86{7$E

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..6a3e393 100644
--- a/client3.py
+++ b/client3.py
@@ -29,31 +29,38 @@ QUERY = "http://localhost:8080/query?id={}"
 # 500 server request
 N = 500
 
+
 def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
-	stock = quote['stock']
-	bid_price = float(quote['top_bid']['price'])
-	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
-	return stock, bid_price, ask_price, price
+    """ Produce all of the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price + ask_price) / 2
+    return stock, bid_price, ask_price, price
+
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    """ Also create some unit tests for this function in client_test.py """
+    if(price_b== 0):
+      return
+
+    return price_a / price_b
+
 
 # Main
 if __name__ == "__main__":
 
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(
+            urllib.request.urlopen(QUERY.format(random.random())).read())
+        """ ----------- Update to get the ratio --------------- """
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" %
+                  (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(price, price))
diff --git a/client_test.py b/client_test.py
index af2bf26..c5278fc 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,14 +8,16 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote['stock'], quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price'] + quote['top_ask']['price'])/2))
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote['stock'], quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   """ ------------ Add more unit tests ------------ """
 
-- 
2.17.1
